// <auto-generated />
using Gelo.WebApi.Infraestructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gelo.WebApi.Migrations
{
    [DbContext(typeof(GeloContext))]
    partial class GeloContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gelo.WebApi.Domains.BoletoCondicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClienteId");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("BoletosCondicoes");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<uint>("CapacidadeFreezerEmPacotes");

                    b.Property<string>("NomeRazaoSocial")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Contato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClienteId");

                    b.Property<string>("NomesDonos");

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClienteId");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.NotaFiscalCondicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ClienteId");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<bool>("EmitirNF");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("NotasFiscaisCondicoes");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeProduto")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.ProdutoPorCliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Atual");

                    b.Property<long>("ClienteId");

                    b.Property<long>("ProdutoId");

                    b.Property<decimal>("ValorNegociado");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutosPorClientes");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.TipoUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<long>("TipoUsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.BoletoCondicao", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Contato", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Endereco", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.NotaFiscalCondicao", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.ProdutoPorCliente", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Gelo.WebApi.Domains.Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Gelo.WebApi.Domains.Usuario", b =>
                {
                    b.HasOne("Gelo.WebApi.Domains.TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
